#include <LiquidCrystal_I2C.h>
#include <Wire.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);
#include <Keypad.h>
const byte filas = 4; //pines de filas
const byte columnas = 4; //pines columnas

char keys [filas][columnas] = { //arreglo para modelo de teclas de teclado
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte pinesfilas[filas] = { 9, 8, 7, 6 };  //conexion de pines de arduino
byte pinescolumnas[columnas] = { 5, 4, 3, 2 };  //conexion de pines de arduino
char CLAVE[5];
byte INDICE = 0;
char clave_master[5] = "1234";

Keypad teclado = Keypad(makeKeymap (keys), pinesfilas, pinescolumnas, filas, columnas);
char tecla; //guarda tecla presionada

//sensorPir
int frecuencia=350; // frecuencia correspondiente a la nota La
const int buzzer = 13;
const int PIRpin = A0;
const int rojo = 10;
const int verde = 11;
const int ledAzul = 12;
int pirState = LOW;
int val = 0;

void setup() {
  lcd.begin();
  lcd.backlight();
  lcd.clear();
  pinMode(buzzer, OUTPUT);
  pinMode(rojo, OUTPUT);
  pinMode(verde, OUTPUT);
  pinMode(ledAzul, OUTPUT);
  pinMode(PIRpin, INPUT);
  digitalWrite(ledAzul, LOW);
}

void loop() {
  tecla = teclado.getKey(); //obtenemos tecla
  if (tecla) {
    CLAVE[INDICE] = tecla;
    INDICE++;
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print(tecla);
  }

  if (INDICE == 4) {
    if (!strcmp(CLAVE, clave_master)) { //comparamos clave
      sensor();
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Acceso correcto");
      delay(1000);
    } else {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Incorrecto");
      digitalWrite(ledAzul, HIGH);
      delay(1000);
      digitalWrite(ledAzul, LOW);
      delay(1000);
    }
  }
}


//funciones
void sensor() {
  int sensorgas = analogRead(A1);
  float voltaje = sensorgas * (3.3 / 1024); //conversor de adc a voltaje
  lcd.print(sensorgas);
  delay(750);
  if (voltaje > 0.87) {
    lcd.print(sensorgas);
    delay(1000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Alerta");

    val = digitalRead(PIRpin);
    if (val == HIGH)   //si está activado
    {
      digitalWrite(rojo, 0);  //LED ON
      digitalWrite(verde, 0);  //LED ON
      digitalWrite(ledAzul, 0);
      /////
      digitalWrite(rojo, 255);  //LED ON
      digitalWrite(verde, 120);  //LED ON
      digitalWrite(ledAzul, 0);
      delay(1000);
      digitalWrite(rojo, LOW);
      digitalWrite(verde, LOW);
     
tone(buzzer,frecuencia); // emite el tono
delay(1500); // lo mantiene 1.5 segundos
noTone(buzzer); // para el tono
delay(500); // espera medio segundo

        if (pirState == LOW)  //si previamente estaba apagado
    {
      Serial.println("Sensor activado");
        pirState = HIGH;
      }
    } else { //si esta desactivado

      digitalWrite(rojo, HIGH);
      if (pirState == HIGH)  //si previamente estaba encendido
      {
        Serial.println("Sensor parado");
        pirState = LOW;
      }
    }
  } else {
    val = digitalRead(PIRpin);
    if (val == HIGH)   //si está activado
    {
      digitalWrite(ledAzul, LOW);
      digitalWrite(verde, HIGH);  //LED ON
      delay(1000);
      digitalWrite(verde, LOW);
      delay(1000);
      if (pirState == LOW)  //si previamente estaba apagado
      {
        Serial.println("Sensor activado");
        pirState = HIGH;
      }
    }
  }
}

